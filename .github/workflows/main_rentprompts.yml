# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Node.js app to Azure Web App - rentprompts

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read #This is required for actions/checkout

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      - name: Create .env file
        run: |
          echo "DATABASE_URI=${{ DATABASE_URI }}" > .env
          echo "PAYLOAD_SECRET=${{ PAYLOAD_SECRET }}" >> .env
          echo "PAYLOAD_PUBLIC_SERVER_URL=${{ secrets.PAYLOAD_PUBLIC_SERVER_URL }}" >> .env
          echo "NEXT_PUBLIC_SERVER_URL=${{ secrets.NEXT_PUBLIC_SERVER_URL }}" >> .env
          echo "RESEND_API_KEY=${{ secrets.RESEND_API_KEY }}" >> .env
          echo "PAYLOAD_PUBLIC_CLOUDFLARE_PUBLIC_BUCKET_NAME=${{ secrets.PAYLOAD_PUBLIC_CLOUDFLARE_PUBLIC_BUCKET_NAME }}" >> .env
          echo "PAYLOAD_PUBLIC_CLOUDFLARE_PUBLIC_ACCESS_KEY=${{ secrets.PAYLOAD_PUBLIC_CLOUDFLARE_PUBLIC_ACCESS_KEY }}" >> .env
          echo "PAYLOAD_PUBLIC_CLOUDFLARE_PUBLIC_SECRET_KEY=${{ secrets.PAYLOAD_PUBLIC_CLOUDFLARE_PUBLIC_SECRET_KEY }}" >> .env
          echo "PAYLOAD_PUBLIC_CLOUDFLARE_BUCKET_NAME=${{ secrets.PAYLOAD_PUBLIC_CLOUDFLARE_BUCKET_NAME }}" >> .env
          echo "PAYLOAD_PUBLIC_CLOUDFLARE_ACCESS_KEY=${{ secrets.PAYLOAD_PUBLIC_CLOUDFLARE_ACCESS_KEY }}" >> .env
          echo "PAYLOAD_PUBLIC_CLOUDFLARE_SECRET_KEY=${{ secrets.PAYLOAD_PUBLIC_CLOUDFLARE_SECRET_KEY }}" >> .env
          echo "PAYLOAD_PUBLIC_CLOUDFLARE_ENDPOINT=${{ secrets.PAYLOAD_PUBLIC_CLOUDFLARE_ENDPOINT }}" >> .env
          echo "PAYLOAD_PUBLIC_CLOUDFLARE_PUBLIC_R2=${{ secrets.PAYLOAD_PUBLIC_CLOUDFLARE_PUBLIC_R2 }}" >> .env 
          
      - name: npm install, build, and test
        run: |
          npm install --legacy-peer-deps
          npm run build --if-present
          npm run test --if-present

      - name: Zip artifact for deployment
        run: zip release.zip ./* -r

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write #This is required for requesting the JWT
      contents: read #This is required for actions/checkout

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: Unzip artifact for deployment
        run: unzip release.zip
      
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_02E113672F15434D99E3A65216441E88 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_47CDC82F541A4BA78840A2D7D3A42CB1 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_54A2398ABADC46D5960F97AFFACE3AFB }}

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'rentprompts'
          slot-name: 'Production'
          package: .
          
